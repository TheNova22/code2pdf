version: '3.8'
services:
  nginx:
    image: nginx:1.23.1
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    depends_on:
      go:
       condition: service_started

  go:
    build:
      context: ./
      dockerfile: ./golang/Dockerfile
    volumes:
      - ./volume:/volume
    container_name: go
    ports:
      - 1456:1456
    depends_on:
      kafka:
        condition: service_healthy
      # kafka2:
      #   condition: service_healthy
      flask:
        condition: service_started

  flask:
    build:
      context: ./
      dockerfile: ./pyscript/Dockerfile
    command: gunicorn --bind 0.0.0.0:5000 app:app --workers=4
    volumes:
      - ./volume:/volume
    container_name: flask
    ports:
      - 5000:5000

  url_consumer:
    build:
      context: ./
      dockerfile: ./url_consumer/Dockerfile
    # command: python3 url.py
    volumes:
      - ./volume:/volume
    container_name: url_consumer
    ports:
      - 740:740
    depends_on:
      kafka:
        condition: service_healthy
      cassandra:
        condition: service_started

  file_consumer:
    build:
      context: ./
      dockerfile: ./file_consumer/Dockerfile
    # command: python3 url.py
    volumes:
      - ./volume:/volume
    container_name: file_consumer
    ports:
      - 741:741
    depends_on:
      kafka:
        condition: service_healthy
      cassandra:
        condition: service_started
  
  zookeeper:
    image: wurstmeister/zookeeper:latest
    expose:
      - "2181"
    restart: always
    container_name: zookeeper

  kafka:
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9093"
    expose:
      - "9093"
    environment:
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
    restart: always
    container_name: kafka
    healthcheck:
        test: ["CMD", "nc", "-vz", "kafka", "29092"]
        interval: 30s
        timeout: 5s
        retries: 10
    
  cassandra:
      image: cassandra:latest
      container_name: cassandra
      ports:
        - "9042:9042"
      expose:
        - "9042"
      restart: always
      volumes:
        - ./cassandra_data:/var/lib/cassandra
      environment:
        - HEAP_NEWSIZE=128M
        - MAX_HEAP_SIZE=256M


volumes:
  volume: